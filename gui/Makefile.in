# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# INCLUDES = -I @top_srcdir@/include
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CFG_PLATFORM = @CFG_PLATFORM@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
INCLUDES = @INCLUDES@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

EXTRA_LIBRARIES = libgui.a
noinst_LIBRARIES = libgui.a


#if CFG_DRIVER_NKB
#I386_NKB_SRCS = i386/nkb.c
#endif

#libdriver_a_SOURCES = i386/pc_com.c $(I386_NKB_SRCS)
MW_DIR = mw

MW_STDINC_DIR = stdinc
MW_INCLUDE_DIR = include
MW_ENGINE_DIR = engine
MW_DRIVERS_DIR = drivers
MW_NANOX_DIR = nanox
MW_MWIN_DIR = mwin
MW_FONTS_DIR = fonts

MW_ENGINE_SRCS := $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/error.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c \
                $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c



# MW_ENGINE_SRCS += $(MW_DIR)/$(MW_ENGINE_DIR)/font_fnt.c
# MW_ENGINE_SRCS += $(MW_DIR)/$(MW_ENGINE_DIR)/font_hzk.c
MW_DRIVERS_SRCS := $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c \
                $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c \
                $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c \
                $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c \
                $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c


MW_FONTS_SRCS := $(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c \
                $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c


# no use windows api
MW_MWIN_SRCS := $(MW_DIR)/$(MW_MWIN_DIR)/winmain.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winuser.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/wingdi.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winexpos.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winclip.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winevent.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/windefw.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winrgn.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winfont.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winsbar.c \
                \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/draw3d.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/ptinsid.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/insetr.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/fastfill.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/graph3d.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/mwuser.c \
                \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/button.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/edit.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/listbox.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/progbar.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/static.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/combobox.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/caret.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/scrlbar.c \
                $(MW_DIR)/$(MW_MWIN_DIR)/winlib/medit.c 


MW_NANOX_SRV_SRCS := $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c \
                $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c \
                $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c \
                $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c \
                $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c


#                $(MW_DIR)/$(MW_NANOX_DIR)/srvnet.c
MW_NANOX_CLI_SRCS := $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c \
                $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c


#                $(MW_DIR)/$(MW_NANOX_DIR)/client.c \
#                $(MW_DIR)/$(MW_NANOX_DIR)/nxproto.c \
#                $(MW_DIR)/$(MW_NANOX_DIR)/error.c 
MW_NANOX_SRCS := $(MW_NANOX_SRV_SRCS) $(MW_NANOX_CLI_SRCS)

#MW_DEMOS_SRCS := $(MW_DIR)/demos/mwin/mine.c
MW_DEMOS_SRCS = $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c

MW_SRCS := $(MW_ENGINE_SRCS) $(MW_DRIVERS_SRCS) $(MW_NANOX_SRCS) $(MW_FONTS_SRCS) $(MW_DEMOS_SRCS)

libgui_a_CFLAGS = -I@top_srcdir@/gui/$(MW_DIR)/$(MW_STDINC_DIR) -I@top_srcdir@/gui/$(MW_DIR)/$(MW_INCLUDE_DIR)
libgui_a_SOURCES = $(MW_SRCS)
subdir = gui
mkinstalldirs = $(SHELL) $(top_srcdir)/acauxdir/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/yios/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libgui_a_AR = $(AR) cru
libgui_a_LIBADD =
am__objects_1 = libgui_a-devopen.$(OBJEXT) libgui_a-devdraw.$(OBJEXT) \
	libgui_a-devfont.$(OBJEXT) libgui_a-devmouse.$(OBJEXT) \
	libgui_a-devkbd.$(OBJEXT) libgui_a-devclip.$(OBJEXT) \
	libgui_a-devrgn.$(OBJEXT) libgui_a-devpal1.$(OBJEXT) \
	libgui_a-devpal2.$(OBJEXT) libgui_a-devimage.$(OBJEXT) \
	libgui_a-devimage_stretch.$(OBJEXT) \
	libgui_a-image_bmp.$(OBJEXT) libgui_a-image_gif.$(OBJEXT) \
	libgui_a-image_jpeg.$(OBJEXT) libgui_a-image_png.$(OBJEXT) \
	libgui_a-image_pnm.$(OBJEXT) libgui_a-image_tiff.$(OBJEXT) \
	libgui_a-image_xpm.$(OBJEXT) libgui_a-devlist.$(OBJEXT) \
	libgui_a-selfont.$(OBJEXT) libgui_a-error.$(OBJEXT) \
	libgui_a-devrgn2.$(OBJEXT) libgui_a-devarc.$(OBJEXT) \
	libgui_a-devpoly.$(OBJEXT) libgui_a-devstipple.$(OBJEXT) \
	libgui_a-font_dbcs.$(OBJEXT)
am__objects_2 = libgui_a-stdsup.$(OBJEXT) libgui_a-scr_svga.$(OBJEXT) \
	libgui_a-kbd_ps2.$(OBJEXT) libgui_a-mou_ps2.$(OBJEXT) \
	libgui_a-genfont.$(OBJEXT)
am__objects_3 = libgui_a-srvmain.$(OBJEXT) libgui_a-srvfunc.$(OBJEXT) \
	libgui_a-srvutil.$(OBJEXT) libgui_a-srvevent.$(OBJEXT) \
	libgui_a-srvclip.$(OBJEXT)
am__objects_4 = libgui_a-nxdraw.$(OBJEXT) libgui_a-nxutil.$(OBJEXT)
am__objects_5 = $(am__objects_3) $(am__objects_4)
am__objects_6 = libgui_a-winFreeSansSerif11x13.$(OBJEXT) \
	libgui_a-X6x13.$(OBJEXT)
am__objects_7 = libgui_a-ntetris.$(OBJEXT)
am__objects_8 = $(am__objects_1) $(am__objects_2) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7)
am_libgui_a_OBJECTS = $(am__objects_8)
libgui_a_OBJECTS = $(am_libgui_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include/yios
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/acauxdir/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/libgui_a-X6x13.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devarc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devclip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devdraw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devfont.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devimage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devimage_stretch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devkbd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devlist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devmouse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devopen.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devpal1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devpal2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devpoly.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devrgn.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devrgn2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-devstipple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-error.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-font_dbcs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-genfont.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_bmp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_gif.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_jpeg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_png.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_pnm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_tiff.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-image_xpm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-kbd_ps2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-mou_ps2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-ntetris.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-nxdraw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-nxutil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-scr_svga.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-selfont.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-srvclip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-srvevent.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-srvfunc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-srvmain.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-srvutil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-stdsup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libgui_a-winFreeSansSerif11x13.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgui_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libgui_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gui/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libgui_a-devopen.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c
libgui_a-devdraw.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c
libgui_a-devfont.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c
libgui_a-devmouse.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c
libgui_a-devkbd.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c
libgui_a-devclip.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c
libgui_a-devrgn.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c
libgui_a-devpal1.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c
libgui_a-devpal2.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c
libgui_a-devimage.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c
libgui_a-devimage_stretch.$(OBJEXT): \
	$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c
libgui_a-image_bmp.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c
libgui_a-image_gif.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c
libgui_a-image_jpeg.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c
libgui_a-image_png.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c
libgui_a-image_pnm.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c
libgui_a-image_tiff.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c
libgui_a-image_xpm.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c
libgui_a-devlist.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c
libgui_a-selfont.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c
libgui_a-error.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/error.c
libgui_a-devrgn2.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c
libgui_a-devarc.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c
libgui_a-devpoly.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c
libgui_a-devstipple.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c
libgui_a-font_dbcs.$(OBJEXT): $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c
libgui_a-stdsup.$(OBJEXT): $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c
libgui_a-scr_svga.$(OBJEXT): $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c
libgui_a-kbd_ps2.$(OBJEXT): $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c
libgui_a-mou_ps2.$(OBJEXT): $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c
libgui_a-genfont.$(OBJEXT): $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c
libgui_a-srvmain.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c
libgui_a-srvfunc.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c
libgui_a-srvutil.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c
libgui_a-srvevent.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c
libgui_a-srvclip.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c
libgui_a-nxdraw.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c
libgui_a-nxutil.$(OBJEXT): $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c
libgui_a-winFreeSansSerif11x13.$(OBJEXT): \
	$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c
libgui_a-X6x13.$(OBJEXT): $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c
libgui_a-ntetris.$(OBJEXT): $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c
libgui.a: $(libgui_a_OBJECTS) $(libgui_a_DEPENDENCIES) 
	-rm -f libgui.a
	$(libgui_a_AR) libgui.a $(libgui_a_OBJECTS) $(libgui_a_LIBADD)
	$(RANLIB) libgui.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-X6x13.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devarc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devclip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devdraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devfont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devimage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devimage_stretch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devkbd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devmouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devopen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devpal1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devpal2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devrgn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devrgn2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-devstipple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-font_dbcs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-genfont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_bmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_gif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_jpeg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_pnm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_tiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-image_xpm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-kbd_ps2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-mou_ps2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-ntetris.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-nxdraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-nxutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-scr_svga.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-selfont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-srvclip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-srvevent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-srvfunc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-srvmain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-srvutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-stdsup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgui_a-winFreeSansSerif11x13.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libgui_a-devopen.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c' object='libgui_a-devopen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devopen.Po' tmpdepfile='$(DEPDIR)/libgui_a-devopen.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devopen.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c

libgui_a-devopen.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c' object='libgui_a-devopen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devopen.Po' tmpdepfile='$(DEPDIR)/libgui_a-devopen.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devopen.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c`

libgui_a-devopen.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c' object='libgui_a-devopen.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devopen.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devopen.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devopen.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devopen.c

libgui_a-devdraw.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c' object='libgui_a-devdraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devdraw.Po' tmpdepfile='$(DEPDIR)/libgui_a-devdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devdraw.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c

libgui_a-devdraw.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c' object='libgui_a-devdraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devdraw.Po' tmpdepfile='$(DEPDIR)/libgui_a-devdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devdraw.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c`

libgui_a-devdraw.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c' object='libgui_a-devdraw.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devdraw.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devdraw.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devdraw.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devdraw.c

libgui_a-devfont.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c' object='libgui_a-devfont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-devfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devfont.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c

libgui_a-devfont.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c' object='libgui_a-devfont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-devfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devfont.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c`

libgui_a-devfont.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c' object='libgui_a-devfont.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devfont.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devfont.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devfont.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devfont.c

libgui_a-devmouse.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c' object='libgui_a-devmouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devmouse.Po' tmpdepfile='$(DEPDIR)/libgui_a-devmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devmouse.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c

libgui_a-devmouse.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c' object='libgui_a-devmouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devmouse.Po' tmpdepfile='$(DEPDIR)/libgui_a-devmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devmouse.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c`

libgui_a-devmouse.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c' object='libgui_a-devmouse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devmouse.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devmouse.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devmouse.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devmouse.c

libgui_a-devkbd.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c' object='libgui_a-devkbd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devkbd.Po' tmpdepfile='$(DEPDIR)/libgui_a-devkbd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devkbd.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c

libgui_a-devkbd.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c' object='libgui_a-devkbd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devkbd.Po' tmpdepfile='$(DEPDIR)/libgui_a-devkbd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devkbd.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c`

libgui_a-devkbd.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c' object='libgui_a-devkbd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devkbd.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devkbd.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devkbd.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devkbd.c

libgui_a-devclip.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c' object='libgui_a-devclip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devclip.Po' tmpdepfile='$(DEPDIR)/libgui_a-devclip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devclip.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c

libgui_a-devclip.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c' object='libgui_a-devclip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devclip.Po' tmpdepfile='$(DEPDIR)/libgui_a-devclip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devclip.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c`

libgui_a-devclip.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c' object='libgui_a-devclip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devclip.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devclip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devclip.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devclip.c

libgui_a-devrgn.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c' object='libgui_a-devrgn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn.Po' tmpdepfile='$(DEPDIR)/libgui_a-devrgn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c

libgui_a-devrgn.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c' object='libgui_a-devrgn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn.Po' tmpdepfile='$(DEPDIR)/libgui_a-devrgn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c`

libgui_a-devrgn.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c' object='libgui_a-devrgn.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devrgn.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn.c

libgui_a-devpal1.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c' object='libgui_a-devpal1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal1.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpal1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal1.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c

libgui_a-devpal1.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c' object='libgui_a-devpal1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal1.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpal1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal1.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c`

libgui_a-devpal1.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c' object='libgui_a-devpal1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal1.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devpal1.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal1.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpal1.c

libgui_a-devpal2.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c' object='libgui_a-devpal2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal2.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpal2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal2.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c

libgui_a-devpal2.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c' object='libgui_a-devpal2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal2.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpal2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal2.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c`

libgui_a-devpal2.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c' object='libgui_a-devpal2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpal2.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devpal2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpal2.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpal2.c

libgui_a-devimage.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c' object='libgui_a-devimage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage.Po' tmpdepfile='$(DEPDIR)/libgui_a-devimage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c

libgui_a-devimage.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c' object='libgui_a-devimage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage.Po' tmpdepfile='$(DEPDIR)/libgui_a-devimage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c`

libgui_a-devimage.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c' object='libgui_a-devimage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devimage.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devimage.c

libgui_a-devimage_stretch.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c' object='libgui_a-devimage_stretch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage_stretch.Po' tmpdepfile='$(DEPDIR)/libgui_a-devimage_stretch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage_stretch.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c

libgui_a-devimage_stretch.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c' object='libgui_a-devimage_stretch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage_stretch.Po' tmpdepfile='$(DEPDIR)/libgui_a-devimage_stretch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage_stretch.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c`

libgui_a-devimage_stretch.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c' object='libgui_a-devimage_stretch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devimage_stretch.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devimage_stretch.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devimage_stretch.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devimage_stretch.c

libgui_a-image_bmp.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c' object='libgui_a-image_bmp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_bmp.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_bmp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_bmp.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c

libgui_a-image_bmp.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c' object='libgui_a-image_bmp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_bmp.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_bmp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_bmp.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c`

libgui_a-image_bmp.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c' object='libgui_a-image_bmp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_bmp.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_bmp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_bmp.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_bmp.c

libgui_a-image_gif.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c' object='libgui_a-image_gif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_gif.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_gif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_gif.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c

libgui_a-image_gif.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c' object='libgui_a-image_gif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_gif.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_gif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_gif.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c`

libgui_a-image_gif.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c' object='libgui_a-image_gif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_gif.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_gif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_gif.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_gif.c

libgui_a-image_jpeg.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c' object='libgui_a-image_jpeg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_jpeg.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_jpeg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_jpeg.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c

libgui_a-image_jpeg.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c' object='libgui_a-image_jpeg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_jpeg.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_jpeg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_jpeg.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c`

libgui_a-image_jpeg.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c' object='libgui_a-image_jpeg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_jpeg.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_jpeg.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_jpeg.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_jpeg.c

libgui_a-image_png.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c' object='libgui_a-image_png.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_png.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_png.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_png.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c

libgui_a-image_png.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c' object='libgui_a-image_png.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_png.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_png.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_png.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c`

libgui_a-image_png.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c' object='libgui_a-image_png.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_png.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_png.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_png.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_png.c

libgui_a-image_pnm.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c' object='libgui_a-image_pnm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_pnm.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_pnm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_pnm.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c

libgui_a-image_pnm.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c' object='libgui_a-image_pnm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_pnm.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_pnm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_pnm.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c`

libgui_a-image_pnm.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c' object='libgui_a-image_pnm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_pnm.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_pnm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_pnm.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_pnm.c

libgui_a-image_tiff.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c' object='libgui_a-image_tiff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_tiff.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_tiff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_tiff.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c

libgui_a-image_tiff.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c' object='libgui_a-image_tiff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_tiff.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_tiff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_tiff.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c`

libgui_a-image_tiff.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c' object='libgui_a-image_tiff.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_tiff.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_tiff.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_tiff.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_tiff.c

libgui_a-image_xpm.o: $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c' object='libgui_a-image_xpm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_xpm.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_xpm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_xpm.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c

libgui_a-image_xpm.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c' object='libgui_a-image_xpm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_xpm.Po' tmpdepfile='$(DEPDIR)/libgui_a-image_xpm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_xpm.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c`

libgui_a-image_xpm.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c' object='libgui_a-image_xpm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-image_xpm.Plo' tmpdepfile='$(DEPDIR)/libgui_a-image_xpm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-image_xpm.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/image_xpm.c

libgui_a-devlist.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c' object='libgui_a-devlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devlist.Po' tmpdepfile='$(DEPDIR)/libgui_a-devlist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devlist.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c

libgui_a-devlist.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c' object='libgui_a-devlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devlist.Po' tmpdepfile='$(DEPDIR)/libgui_a-devlist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devlist.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c`

libgui_a-devlist.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c' object='libgui_a-devlist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devlist.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devlist.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devlist.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devlist.c

libgui_a-selfont.o: $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c' object='libgui_a-selfont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-selfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-selfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-selfont.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c

libgui_a-selfont.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c' object='libgui_a-selfont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-selfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-selfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-selfont.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c`

libgui_a-selfont.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c' object='libgui_a-selfont.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-selfont.Plo' tmpdepfile='$(DEPDIR)/libgui_a-selfont.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-selfont.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/selfont.c

libgui_a-error.o: $(MW_DIR)/$(MW_ENGINE_DIR)/error.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/error.c' object='libgui_a-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-error.Po' tmpdepfile='$(DEPDIR)/libgui_a-error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-error.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/error.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/error.c

libgui_a-error.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/error.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/error.c' object='libgui_a-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-error.Po' tmpdepfile='$(DEPDIR)/libgui_a-error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-error.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/error.c`

libgui_a-error.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/error.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/error.c' object='libgui_a-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-error.Plo' tmpdepfile='$(DEPDIR)/libgui_a-error.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-error.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/error.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/error.c

libgui_a-devrgn2.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c' object='libgui_a-devrgn2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn2.Po' tmpdepfile='$(DEPDIR)/libgui_a-devrgn2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn2.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c

libgui_a-devrgn2.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c' object='libgui_a-devrgn2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn2.Po' tmpdepfile='$(DEPDIR)/libgui_a-devrgn2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn2.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c`

libgui_a-devrgn2.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c' object='libgui_a-devrgn2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devrgn2.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devrgn2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devrgn2.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devrgn2.c

libgui_a-devarc.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c' object='libgui_a-devarc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devarc.Po' tmpdepfile='$(DEPDIR)/libgui_a-devarc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devarc.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c

libgui_a-devarc.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c' object='libgui_a-devarc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devarc.Po' tmpdepfile='$(DEPDIR)/libgui_a-devarc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devarc.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c`

libgui_a-devarc.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c' object='libgui_a-devarc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devarc.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devarc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devarc.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devarc.c

libgui_a-devpoly.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c' object='libgui_a-devpoly.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpoly.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpoly.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpoly.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c

libgui_a-devpoly.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c' object='libgui_a-devpoly.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpoly.Po' tmpdepfile='$(DEPDIR)/libgui_a-devpoly.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpoly.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c`

libgui_a-devpoly.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c' object='libgui_a-devpoly.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devpoly.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devpoly.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devpoly.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devpoly.c

libgui_a-devstipple.o: $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c' object='libgui_a-devstipple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devstipple.Po' tmpdepfile='$(DEPDIR)/libgui_a-devstipple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devstipple.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c

libgui_a-devstipple.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c' object='libgui_a-devstipple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devstipple.Po' tmpdepfile='$(DEPDIR)/libgui_a-devstipple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devstipple.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c`

libgui_a-devstipple.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c' object='libgui_a-devstipple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-devstipple.Plo' tmpdepfile='$(DEPDIR)/libgui_a-devstipple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-devstipple.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/devstipple.c

libgui_a-font_dbcs.o: $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c' object='libgui_a-font_dbcs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-font_dbcs.Po' tmpdepfile='$(DEPDIR)/libgui_a-font_dbcs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-font_dbcs.o `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c

libgui_a-font_dbcs.obj: $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c' object='libgui_a-font_dbcs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-font_dbcs.Po' tmpdepfile='$(DEPDIR)/libgui_a-font_dbcs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-font_dbcs.obj `cygpath -w $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c`

libgui_a-font_dbcs.lo: $(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c' object='libgui_a-font_dbcs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-font_dbcs.Plo' tmpdepfile='$(DEPDIR)/libgui_a-font_dbcs.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-font_dbcs.lo `test -f '$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_ENGINE_DIR)/font_dbcs.c

libgui_a-stdsup.o: $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c' object='libgui_a-stdsup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-stdsup.Po' tmpdepfile='$(DEPDIR)/libgui_a-stdsup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-stdsup.o `test -f '$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c

libgui_a-stdsup.obj: $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c' object='libgui_a-stdsup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-stdsup.Po' tmpdepfile='$(DEPDIR)/libgui_a-stdsup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-stdsup.obj `cygpath -w $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c`

libgui_a-stdsup.lo: $(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c' object='libgui_a-stdsup.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-stdsup.Plo' tmpdepfile='$(DEPDIR)/libgui_a-stdsup.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-stdsup.lo `test -f '$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_STDINC_DIR)/stdsup.c

libgui_a-scr_svga.o: $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c' object='libgui_a-scr_svga.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-scr_svga.Po' tmpdepfile='$(DEPDIR)/libgui_a-scr_svga.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-scr_svga.o `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c

libgui_a-scr_svga.obj: $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c' object='libgui_a-scr_svga.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-scr_svga.Po' tmpdepfile='$(DEPDIR)/libgui_a-scr_svga.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-scr_svga.obj `cygpath -w $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c`

libgui_a-scr_svga.lo: $(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c' object='libgui_a-scr_svga.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-scr_svga.Plo' tmpdepfile='$(DEPDIR)/libgui_a-scr_svga.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-scr_svga.lo `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/scr_svga.c

libgui_a-kbd_ps2.o: $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c' object='libgui_a-kbd_ps2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-kbd_ps2.Po' tmpdepfile='$(DEPDIR)/libgui_a-kbd_ps2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-kbd_ps2.o `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c

libgui_a-kbd_ps2.obj: $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c' object='libgui_a-kbd_ps2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-kbd_ps2.Po' tmpdepfile='$(DEPDIR)/libgui_a-kbd_ps2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-kbd_ps2.obj `cygpath -w $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c`

libgui_a-kbd_ps2.lo: $(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c' object='libgui_a-kbd_ps2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-kbd_ps2.Plo' tmpdepfile='$(DEPDIR)/libgui_a-kbd_ps2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-kbd_ps2.lo `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/kbd_ps2.c

libgui_a-mou_ps2.o: $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c' object='libgui_a-mou_ps2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-mou_ps2.Po' tmpdepfile='$(DEPDIR)/libgui_a-mou_ps2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-mou_ps2.o `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c

libgui_a-mou_ps2.obj: $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c' object='libgui_a-mou_ps2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-mou_ps2.Po' tmpdepfile='$(DEPDIR)/libgui_a-mou_ps2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-mou_ps2.obj `cygpath -w $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c`

libgui_a-mou_ps2.lo: $(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c' object='libgui_a-mou_ps2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-mou_ps2.Plo' tmpdepfile='$(DEPDIR)/libgui_a-mou_ps2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-mou_ps2.lo `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/mou_ps2.c

libgui_a-genfont.o: $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c' object='libgui_a-genfont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-genfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-genfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-genfont.o `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c

libgui_a-genfont.obj: $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c' object='libgui_a-genfont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-genfont.Po' tmpdepfile='$(DEPDIR)/libgui_a-genfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-genfont.obj `cygpath -w $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c`

libgui_a-genfont.lo: $(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c' object='libgui_a-genfont.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-genfont.Plo' tmpdepfile='$(DEPDIR)/libgui_a-genfont.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-genfont.lo `test -f '$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_DRIVERS_DIR)/genfont.c

libgui_a-srvmain.o: $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c' object='libgui_a-srvmain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvmain.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvmain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvmain.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c

libgui_a-srvmain.obj: $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c' object='libgui_a-srvmain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvmain.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvmain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvmain.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c`

libgui_a-srvmain.lo: $(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c' object='libgui_a-srvmain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvmain.Plo' tmpdepfile='$(DEPDIR)/libgui_a-srvmain.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvmain.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvmain.c

libgui_a-srvfunc.o: $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c' object='libgui_a-srvfunc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvfunc.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvfunc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvfunc.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c

libgui_a-srvfunc.obj: $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c' object='libgui_a-srvfunc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvfunc.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvfunc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvfunc.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c`

libgui_a-srvfunc.lo: $(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c' object='libgui_a-srvfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvfunc.Plo' tmpdepfile='$(DEPDIR)/libgui_a-srvfunc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvfunc.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvfunc.c

libgui_a-srvutil.o: $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c' object='libgui_a-srvutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvutil.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvutil.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c

libgui_a-srvutil.obj: $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c' object='libgui_a-srvutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvutil.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvutil.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c`

libgui_a-srvutil.lo: $(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c' object='libgui_a-srvutil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvutil.Plo' tmpdepfile='$(DEPDIR)/libgui_a-srvutil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvutil.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvutil.c

libgui_a-srvevent.o: $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c' object='libgui_a-srvevent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvevent.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvevent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvevent.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c

libgui_a-srvevent.obj: $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c' object='libgui_a-srvevent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvevent.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvevent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvevent.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c`

libgui_a-srvevent.lo: $(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c' object='libgui_a-srvevent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvevent.Plo' tmpdepfile='$(DEPDIR)/libgui_a-srvevent.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvevent.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvevent.c

libgui_a-srvclip.o: $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c' object='libgui_a-srvclip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvclip.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvclip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvclip.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c

libgui_a-srvclip.obj: $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c' object='libgui_a-srvclip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvclip.Po' tmpdepfile='$(DEPDIR)/libgui_a-srvclip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvclip.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c`

libgui_a-srvclip.lo: $(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c' object='libgui_a-srvclip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-srvclip.Plo' tmpdepfile='$(DEPDIR)/libgui_a-srvclip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-srvclip.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/srvclip.c

libgui_a-nxdraw.o: $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c' object='libgui_a-nxdraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxdraw.Po' tmpdepfile='$(DEPDIR)/libgui_a-nxdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxdraw.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c

libgui_a-nxdraw.obj: $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c' object='libgui_a-nxdraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxdraw.Po' tmpdepfile='$(DEPDIR)/libgui_a-nxdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxdraw.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c`

libgui_a-nxdraw.lo: $(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c' object='libgui_a-nxdraw.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxdraw.Plo' tmpdepfile='$(DEPDIR)/libgui_a-nxdraw.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxdraw.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/nxdraw.c

libgui_a-nxutil.o: $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c' object='libgui_a-nxutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxutil.Po' tmpdepfile='$(DEPDIR)/libgui_a-nxutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxutil.o `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c

libgui_a-nxutil.obj: $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c' object='libgui_a-nxutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxutil.Po' tmpdepfile='$(DEPDIR)/libgui_a-nxutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxutil.obj `cygpath -w $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c`

libgui_a-nxutil.lo: $(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c' object='libgui_a-nxutil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-nxutil.Plo' tmpdepfile='$(DEPDIR)/libgui_a-nxutil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-nxutil.lo `test -f '$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_NANOX_DIR)/nxutil.c

libgui_a-winFreeSansSerif11x13.o: $(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c' object='libgui_a-winFreeSansSerif11x13.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.Po' tmpdepfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-winFreeSansSerif11x13.o `test -f '$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c

libgui_a-winFreeSansSerif11x13.obj: $(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c' object='libgui_a-winFreeSansSerif11x13.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.Po' tmpdepfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-winFreeSansSerif11x13.obj `cygpath -w $(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c`

libgui_a-winFreeSansSerif11x13.lo: $(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c' object='libgui_a-winFreeSansSerif11x13.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.Plo' tmpdepfile='$(DEPDIR)/libgui_a-winFreeSansSerif11x13.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-winFreeSansSerif11x13.lo `test -f '$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_FONTS_DIR)/winFreeSansSerif11x13.c

libgui_a-X6x13.o: $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c' object='libgui_a-X6x13.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-X6x13.Po' tmpdepfile='$(DEPDIR)/libgui_a-X6x13.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-X6x13.o `test -f '$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c

libgui_a-X6x13.obj: $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c' object='libgui_a-X6x13.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-X6x13.Po' tmpdepfile='$(DEPDIR)/libgui_a-X6x13.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-X6x13.obj `cygpath -w $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c`

libgui_a-X6x13.lo: $(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c
@AMDEP_TRUE@	source='$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c' object='libgui_a-X6x13.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-X6x13.Plo' tmpdepfile='$(DEPDIR)/libgui_a-X6x13.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-X6x13.lo `test -f '$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c' || echo '$(srcdir)/'`$(MW_DIR)/$(MW_FONTS_DIR)/X6x13.c

libgui_a-ntetris.o: $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c
@AMDEP_TRUE@	source='$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c' object='libgui_a-ntetris.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-ntetris.Po' tmpdepfile='$(DEPDIR)/libgui_a-ntetris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-ntetris.o `test -f '$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c' || echo '$(srcdir)/'`$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c

libgui_a-ntetris.obj: $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c
@AMDEP_TRUE@	source='$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c' object='libgui_a-ntetris.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-ntetris.Po' tmpdepfile='$(DEPDIR)/libgui_a-ntetris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-ntetris.obj `cygpath -w $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c`

libgui_a-ntetris.lo: $(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c
@AMDEP_TRUE@	source='$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c' object='libgui_a-ntetris.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgui_a-ntetris.Plo' tmpdepfile='$(DEPDIR)/libgui_a-ntetris.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgui_a_CFLAGS) $(CFLAGS) -c -o libgui_a-ntetris.lo `test -f '$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c' || echo '$(srcdir)/'`$(MW_DIR)/demos/$(MW_NANOX_DIR)/ntetris.c
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am

                # for network only (server) 
#                $(MW_DIR)/$(MW_NANOX_DIR)/nxtransform.c 
                 # for network only (client)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
